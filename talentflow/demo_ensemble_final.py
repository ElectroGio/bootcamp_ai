"""
Demo Final - Sistema de Afinidad Laboral con Ensemble
Muestra el uso pr√°ctico del modelo entrenado
"""

from ensemble_model import EnsembleAffinityModel

print("="*80)
print("üéØ DEMO: SISTEMA DE EVALUACI√ìN DE AFINIDAD LABORAL")
print("="*80)
print("\nCargando modelo ensemble entrenado...")

# Cargar modelo (ya entrenado)
ensemble = EnsembleAffinityModel(load_models=True)

print("\n")
print("="*80)
print("CASOS DE PRUEBA")
print("="*80)

# CASO 1: Alta Afinidad Esperada
print("\nüìå CASO 1: Candidato con Excelente Match")
print("-" * 80)

job1 = """
Desarrollador Full Stack Senior
Ubicaci√≥n: Remoto
Experiencia requerida: 5-8 a√±os
Educaci√≥n: Profesional en Ingenier√≠a de Sistemas
Skills t√©cnicas: Python, Django, React, PostgreSQL, Docker, AWS, Git
Skills blandas: Liderazgo, Comunicaci√≥n efectiva, Trabajo en equipo
Idiomas: Ingl√©s avanzado
"""

resume1 = """
Experiencia: 8+ a√±os
Educaci√≥n: Profesional en Ingenier√≠a
Skills: Python, Django, Flask, React, JavaScript, PostgreSQL, MongoDB, 
Docker, Kubernetes, AWS, Git, Trabajo en equipo, Liderazgo
Idiomas: Ingl√©s avanzado, Espa√±ol nativo
"""

print("\nüìã OFERTA LABORAL:")
print(job1.strip())
print("\nüë§ CANDIDATO:")
print(resume1.strip())

score1 = ensemble.predict(job1, resume1)
print(f"\nüéØ AFINIDAD PREDICHA: {score1}/10")

if score1 >= 8.0:
    print("‚úÖ RECOMENDACI√ìN: EXCELENTE MATCH - Priorizar para entrevista")
elif score1 >= 6.0:
    print("‚úÖ RECOMENDACI√ìN: BUEN MATCH - Considerar para entrevista")
elif score1 >= 4.0:
    print("‚ö†Ô∏è RECOMENDACI√ìN: MATCH REGULAR - Evaluar m√°s a fondo")
else:
    print("‚ùå RECOMENDACI√ìN: MATCH BAJO - No recomendado")

# CASO 2: Afinidad Media
print("\n" + "="*80)
print("üìå CASO 2: Candidato con Match Parcial")
print("-" * 80)

job2 = """
Data Scientist Senior
Ubicaci√≥n: Bogot√°
Experiencia requerida: 5-8 a√±os
Educaci√≥n: Maestr√≠a
Skills t√©cnicas: Python, Machine Learning, TensorFlow, SQL, AWS
Skills blandas: Pensamiento cr√≠tico, Resoluci√≥n de problemas
Idiomas: Ingl√©s avanzado
"""

resume2 = """
Experiencia: 3-5 a√±os
Educaci√≥n: Profesional en Ingenier√≠a
Skills: Python, Pandas, Scikit-learn, SQL, Machine Learning, 
Comunicaci√≥n efectiva, Trabajo en equipo
Idiomas: Ingl√©s intermedio, Espa√±ol nativo
"""

print("\nüìã OFERTA LABORAL:")
print(job2.strip())
print("\nüë§ CANDIDATO:")
print(resume2.strip())

score2 = ensemble.predict(job2, resume2)
print(f"\nüéØ AFINIDAD PREDICHA: {score2}/10")

if score2 >= 8.0:
    print("‚úÖ RECOMENDACI√ìN: EXCELENTE MATCH - Priorizar para entrevista")
elif score2 >= 6.0:
    print("‚úÖ RECOMENDACI√ìN: BUEN MATCH - Considerar para entrevista")
elif score2 >= 4.0:
    print("‚ö†Ô∏è RECOMENDACI√ìN: MATCH REGULAR - Evaluar m√°s a fondo")
else:
    print("‚ùå RECOMENDACI√ìN: MATCH BAJO - No recomendado")

# CASO 3: Baja Afinidad
print("\n" + "="*80)
print("üìå CASO 3: Candidato con Bajo Match")
print("-" * 80)

job3 = """
Gerente de Proyectos Senior
Ubicaci√≥n: Medell√≠n
Experiencia requerida: 8+ a√±os
Educaci√≥n: Maestr√≠a
Skills t√©cnicas: Gesti√≥n de proyectos, Scrum, Agile, PowerBI
Skills blandas: Liderazgo, Negociaci√≥n, Comunicaci√≥n efectiva
Idiomas: Ingl√©s nativo
"""

resume3 = """
Experiencia: 1-3 a√±os
Educaci√≥n: T√©cnico
Skills: Excel avanzado, PowerBI, Marketing digital, SEO, 
Content creation, Creatividad
Idiomas: Ingl√©s b√°sico, Espa√±ol nativo
"""

print("\nüìã OFERTA LABORAL:")
print(job3.strip())
print("\nüë§ CANDIDATO:")
print(resume3.strip())

score3 = ensemble.predict(job3, resume3)
print(f"\nüéØ AFINIDAD PREDICHA: {score3}/10")

if score3 >= 8.0:
    print("‚úÖ RECOMENDACI√ìN: EXCELENTE MATCH - Priorizar para entrevista")
elif score3 >= 6.0:
    print("‚úÖ RECOMENDACI√ìN: BUEN MATCH - Considerar para entrevista")
elif score3 >= 4.0:
    print("‚ö†Ô∏è RECOMENDACI√ìN: MATCH REGULAR - Evaluar m√°s a fondo")
else:
    print("‚ùå RECOMENDACI√ìN: MATCH BAJO - No recomendado")

# RESUMEN
print("\n" + "="*80)
print("üìä RESUMEN DE EVALUACIONES")
print("="*80)
print(f"\nCaso 1 (Excelente candidato): {score1}/10")
print(f"Caso 2 (Candidato promedio):  {score2}/10")
print(f"Caso 3 (Bajo match):          {score3}/10")

print("\n" + "="*80)
print("‚úÖ DEMO COMPLETADO")
print("="*80)
print("\nüí° PR√ìXIMOS PASOS:")
print("   1. Usar ensemble.predict(job, resume) para evaluar candidatos")
print("   2. Integrar con tu sistema de reclutamiento")
print("   3. Revisar documentaci√≥n en GUIA_USO_FINAL.md")
print("\nüìö Archivos importantes:")
print("   - ensemble_model.py: Modelo principal")
print("   - GUIA_USO_FINAL.md: Manual completo")
print("   - INFORME_EJECUTIVO.md: Resumen ejecutivo")
